const express = require('express');
const Order = require('../models/Order');
const User = require('../models/User');
const authMiddleware = require('../middleware/auth');
const router = express.Router();

router.use(authMiddleware);

router.post('/', async (req, res) => {
  const { service, quantity, link } = req.body;
  try {
    const user = await User.findById(req.user.id);
    const cost = quantity * 0.01; // Mock cost ($0.01 per unit)

    if (user.role === 'admin') {
      const order = new Order({ user: req.user.id, service, quantity, link });
      await order.save();
      console.log(`Mock order: ${quantity} ${service} for ${link}`);
      return res.status(201).json(order);
    }

    if (user.walletBalance < cost) {
      return res.status(400).json({ message: 'Insufficient funds' });
    }

    user.walletBalance -= cost;
    await user.save();
    const order = new Order({ user: req.user.id, service, quantity, link });
    await order.save();
    console.log(`Mock order: ${quantity} ${service} for ${link}`);
    res.status(201).json(order);
  } catch (err) {
    res.status(500).json({ message: 'Server error' });
  }
});

router.get('/', async (req, res) => {
  try {
    const orders = await Order.find({ user: req.user.id });
    res.json(orders);
  } catch (err) {
    res.status(500).json({ message: 'Server error' });
  }
});

module.exports = router;
